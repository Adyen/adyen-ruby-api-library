require_relative './service'
module Adyen
{{#operations}}
  class {{#lambda.titlecase}}{{serviceName}}{{/lambda.titlecase}} < Service
    attr_accessor :service, :version
    DEFAULT_VERSION = {{version}}

    def initialize(client, version = DEFAULT_VERSION)
      super(client, version, '{{#lambda.titlecase}}{{serviceName}}{{/lambda.titlecase}}')
    end

{{#operation}}
    def {{#lambda.snakecase}}{{#vendorExtensions.x-methodName}}{{.}}{{/vendorExtensions.x-methodName}}{{^vendorExtensions.x-methodName}}{{nickname}}{{/vendorExtensions.x-methodName}}{{/lambda.snakecase}}({{#bodyParams}}request, {{/bodyParams}}{{#requiredParams}}{{^isQueryParam}}{{#lambda.camelcase}}{{paramName}}{{/lambda.camelcase}}, {{/isQueryParam}}{{/requiredParams}}headers: {} {{#queryParams}}{{#-first}}, queryParams: {}{{/-first}}{{/queryParams}})
      endpoint = "{{path}}".gsub(/{.+?}/, '%s') 
      endpoint = endpoint.gsub(%r{^/}, '')
      endpoint = endpoint % [{{#pathParams}}{{#lambda.camelcase}}{{paramName}}{{/lambda.camelcase}}{{^-last}},{{/-last}}{{/pathParams}}]
      {{#queryParams}}{{#-first}}endpoint = endpoint + create_query_string(queryParams){{/-first}}{{/queryParams}}
      action = { method: "{{#lambda.lowercase}}{{httpMethod}}{{/lambda.lowercase}}", url: endpoint}
  {{#bodyParams}}        
      @client.call_adyen_api(@service, action, request, headers, @version)
  {{/bodyParams}}
  {{^bodyParams}}
      @client.call_adyen_api(@service, action, {}, headers, @version)
  {{/bodyParams}}
    end

{{/operation}}
{{/operations}}
  end
end
